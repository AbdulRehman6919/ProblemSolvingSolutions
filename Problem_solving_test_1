#Simple Max Difference

#Some inputs to the file:
# temp_list = [7,1,2,5]  
# temp_list = [2,3,10,2,4,8,1]
# temp_list = [7,9,5,6,3,2]
# temp_list = [7,5,3,1]
# temp_list = [10,20,3,4,50,160]

def maximize_diff(temp_list):
    curr_val = -1
    for index,value  in enumerate(temp_list[1:]):
        index=index+1
        value = temp_list[index]
#         print(list(map(lambda x: x-value,temp_list[0:index:1])))
#         print(temp_list[0:index:1])
        max_value = max(list(map(lambda x: value-x,temp_list[0:index:1])))
        if max_value > curr_val:
            curr_val =max_value
    return curr_val
    
    

#Team Formation 2

from functools import reduce
from operator import mul

def factorial_num(num):
    if num==0 or num ==1:
        return 1
    return reduce(mul,range(1,num+1))

def calculate_combinations(skills,min_players,minLevel,maxLevel):
    temp_list = [i for i in skills if i>=minLevel and i<=maxLevel]
    total_comb = 0
    for i in range(min_players,len(temp_list)+1):
        temp_var = factorial_num(len(temp_list)) //(factorial_num(i)*factorial_num(len(temp_list)-i))
        total_comb +=temp_var
    return total_comb

# skills = [12,4,6,13,5,10] 
# min_players = 3
# minLevel = 4
# maxLevel = 10
# combinations = calculate_combinations(skills,min_players,minLevel,maxLevel)
# print("Total combinations are: ",combinations)
